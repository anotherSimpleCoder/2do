void setBuildStatus(String message, String state) {
  step([
      $class: "GitHubCommitStatusSetter",
      reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/anotherSimpleCoder/2do"],
      contextSource: [$class: "ManuallyEnteredCommitContextSource", context: "Test and Build Backend"],
      errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
      statusResultSource: [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ]
  ]);
}

pipeline {
    agent none

    stages {
        parallel {
            stage('Run backend') {
                agent {
                    docker {
                        image 'mcr.microsoft.com/dotnet/sdk:9.0'
                        args '-u root -p 5130:5130' 
                    }
                }

                steps {
                    sh 'dotnet restore'
                    sh 'dotnet build --no-restore'
                    sh 'dotnet tool install dotnet-ef'
                    sh 'dotnet tool run dotnet-ef database update' 
                    sh 'nohup dotnet run'
                }
            }

            stage('Run flutter tests') {
                agent {
                    docker {
                        image 'instrumentisto/flutter:latest'
                        args '-u root' 
                    }
                }

                steps {
                    sh '''
                    echo "Waiting for backend to start..."
                    while ! curl -sSf http://localhost:5130/api/health; do
                        echo "Waiting for backend to start"
                        sleep 5
                    done
                    '''

                    dir('frontend') {
                        sh 'flutter pub get'
                        sh 'flutter test'
                    }
                }
            }
        }
    }
}