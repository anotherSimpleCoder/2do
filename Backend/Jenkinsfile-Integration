pipeline {
    agent {
        docker {
            image 'mcr.microsoft.com/dotnet/sdk:9.0'
            args '-u root'
        }
    }

    stages {
        stage('Setup .NET Core for backend') {
            steps {
                script {
                    sh 'export PATH=$PATH:$HOME/.dotnet'
                }
            }
        }
        stage('Install backend dependencies') {
            steps {
                sh 'dotnet restore'
            }
        }
        stage('Build backend') {
            steps {
                sh 'dotnet build --no-restore'
            }
        }
        stage('Set up dotnet-ef CLI') {
            steps {
                sh 'dotnet tool install dotnet-ef'
            }
        }
        stage('Set up database') {
            steps {
                dir('Backend') {
                    sh 'dotnet tool run dotnet-ef database update'
                }
            }
        }
        stage('Start backend') {
            steps {
                dir('Backend') {
                    sh 'nohup dotnet run &'
                }
            }
        }
        stage('Waiting for backend to be ready') {
            steps {
                script {
                    sh '''
                    echo "Waiting for backend to start..."
                    while ! curl -sSf http://localhost:5130/api/health; do
                        echo "Waiting for backend to start"
                        sleep 5
                    done
                    '''
                }
            }
        }
        stage('Set up Flutter') {
            steps {
                script {
                    def folderExists = sh(script: "if [ -d flutter ]; then echo 'true'; else echo 'false'; fi", returnStdout: true).trim()

                    if (folderExists == 'false') {
                        sh 'git clone https://github.com/flutter/flutter.git'
                        sh 'apt-get install unzip'
                    } 
                }
            }
        }
        stage('Install dependencies for frontend') {
            steps {
                dir('Frontend') {
                    sh "'../flutter/bin/flutter' pub get"
                }
            }
        }
        stage('Run integration tests') {
            steps {
                dir('Frontend') {
                    sh "'../flutter/bin/flutter' test"
                }
            }
        }
    }
}