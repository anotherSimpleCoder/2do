void setBuildStatus(String message, String state) {
  step([
      $class: "GitHubCommitStatusSetter",
      reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/anotherSimpleCoder/2do"],
      contextSource: [$class: "ManuallyEnteredCommitContextSource", context: "Build frontend"],
      errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
      statusResultSource: [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ]
  ]);
}

pipeline {
    agent any

    stages {
        stage('Set GitHub pending status') {
            agent any
    
            steps {
                setBuildStatus("Starting building backend", "PENDING");
            }
        }
        
        stage('Build docker backend image') {
            steps {
                setBuildStatus("Building", "PENDING");
                    
                dir('Frontend') {
                  script {
                    docker.withRegistry('https://ghcr.io', '6c946f9d-e780-4e81-918d-da3fa2f70934') {
                      def frontendImage = docker.build('ghcr.io/anothersimplecoder/2do_frontend:latest')
                      frontendImage.push()
                    }
                  }
                }
            }
        }
        
        stage('Set GitHub success status') {
            steps {
                setBuildStatus("Test complete", "SUCCESS");
            }
        }
    }
}